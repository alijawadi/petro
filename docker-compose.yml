version: '3'

networks:
  laravel:

services:
  nginx:
    build:
      context: ./docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    restart: unless-stopped
    container_name: nginx
    ports:
      - "${APP_PORT:-8000}:8000"
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - php
      - mysql
      - phpmyadmin
    networks:
      - laravel

  php:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: php
    user: "${UID:-1000}:${GID:-1000}"
    ports:
      - ":9000"
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql:/var/lib/mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: ${DB_HOST}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_PORT: ${DB_PORT}
    depends_on:
      - mysql
    ports:
      - "8888:80"
    networks:
      - laravel

  npm:
    build:
      context: ./docker
      dockerfile: node.dockerfile
      args:
        - UID=${UID:-1001}
        - GID=${GID:-1001}
        - USER=${USER:-laravel}
    container_name: npm
    profiles: [ "npm" ]
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    ports:
      - "3000:3000"
      - "3001:3001"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - laravel